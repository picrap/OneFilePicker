<UserControl x:Class="OneFilePicker.Picker.FileDialog"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:picker="clr-namespace:OneFilePicker.Picker"
             xmlns:util="clr-namespace:Wpf.Util"
             mc:Ignorable="d" 
             d:DesignHeight="400" d:DesignWidth="800" x:Name="This" >

    <UserControl.Resources>
        <Thickness x:Key="LeftMargin">8,0,0,0</Thickness>
        <Thickness x:Key="TopMargin">0,4,0,0</Thickness>
        <Style x:Key="LeftColumnHeader" TargetType="GridViewColumnHeader">
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
        </Style>

        <SolidColorBrush x:Key="GlyphBrush" Color="#444" />

        <!--=================================================================
      TreeViewItem
  ==================================================================-->
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid
          Width="15"
          Height="13"
          Background="Transparent">
                            <Path x:Name="ExpandPath"
            HorizontalAlignment="Left" 
            VerticalAlignment="Center" 
            Margin="1,1,1,1"
            Fill="{StaticResource GlyphBrush}"
            Data="M 4 0 L 8 4 L 4 8 Z"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked"
               Value="True">
                                <Setter Property="Data"
                TargetName="ExpandPath"
                Value="M 0 4 L 8 4 L 4 8 Z"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TreeViewItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Margin="0,0,0,0"
                 StrokeThickness="5"
                 Stroke="Black"
                 StrokeDashArray="1 2"
                 Opacity="0"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment,
              RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment,
              RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="1,0,0,0"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <StackPanel>
                            <Border x:Name="Bd" Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="19" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}"
    	                                          IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                            	                  ClickMode="Press"/>
                                    <ContentPresenter x:Name="PART_Header" Grid.Column="1"
                                                      ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                                </Grid>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" Margin="19,0,0,0" />
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false"/>
                                    <Condition Property="Width" Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false"/>
                                    <Condition Property="Height" Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                            </MultiTrigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Navigator bar -->
        <StackPanel Grid.Row="0" Orientation="Horizontal" />

        <!-- Display bar -->
        <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="{DynamicResource TopMargin}" />

        <!-- File tree and selection panel -->
        <Grid Grid.Row="2" Margin="{DynamicResource TopMargin}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <GridSplitter Width="5" ShowsPreview="True" />
            <TreeView Grid.Column="0" ItemsSource="{Binding RootNodes, ElementName=This}" Margin="0,0,5,0" BorderThickness="0" 
                      SelectedItemChanged="TreeView_OnSelectedItemChanged">
                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate DataType="picker:INode" ItemsSource="{Binding FolderChildren}" >
                        <StackPanel Orientation="Horizontal" Margin="0,2">
                            <Image Source="{Binding Icon}" Stretch="UniformToFill" Height="16" />
                            <TextBlock Text="{Binding DisplayName}" Margin="{DynamicResource LeftMargin}" />
                        </StackPanel>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
            </TreeView>
            <ListView x:Name="NodesList" Grid.Column="1" BorderThickness="0" ItemsSource="{Binding SelectedFolder.Children, ElementName=This}"
                      util:GridViewSort.AutoSort="True">
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="Name" Width="200" HeaderContainerStyle="{StaticResource LeftColumnHeader}" 
                                        util:GridViewSort.PropertyName="~IsFolder,DisplayName" util:GridViewSort.DefaultSort="True" >
                            <GridViewColumn.CellTemplate>
                                <DataTemplate DataType="picker:INode">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{Binding Icon}" Stretch="UniformToFill" Height="16" />
                                        <TextBlock Text="{Binding DisplayName}" Margin="{DynamicResource LeftMargin}" />
                                    </StackPanel>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Date Modified" HeaderContainerStyle="{StaticResource LeftColumnHeader}" Width="150"
                                        util:GridViewSort.PropertyName="LastWriteTime" DisplayMemberBinding="{Binding LastWriteTime}" />
                        <GridViewColumn Header="Type" HeaderContainerStyle="{StaticResource LeftColumnHeader}" Width="180"
                                        util:GridViewSort.PropertyName="DisplayType" DisplayMemberBinding="{Binding DisplayType}" />
                        <GridViewColumn Header="Size" HeaderContainerStyle="{StaticResource LeftColumnHeader}" Width="100"
                                        util:GridViewSort.PropertyName="LengthKB" DisplayMemberBinding="{Binding LengthKB}" />
                    </GridView>
                </ListView.View>
            </ListView>
        </Grid>

        <!-- Filters and selection -->
        <Grid Grid.Row="3" Margin="{DynamicResource TopMargin}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" Text="{Binding FileNameLabel, ElementName=This}"/>
            <TextBox Grid.Column="1" Text="{Binding FileName, ElementName=This}" Margin="{DynamicResource LeftMargin}" />
            <ComboBox Grid.Column="2" ItemsSource="{Binding Filters, ElementName=This}" DisplayMemberPath="Display" SelectedIndex="{Binding FilterIndex, ElementName=This}" Margin="{DynamicResource LeftMargin}" />
        </Grid>

        <!-- Buttons -->
        <StackPanel Grid.Row="4" HorizontalAlignment="Right" Orientation="Horizontal" Margin="{DynamicResource TopMargin}">
            <Button Command="{Binding Select, ElementName=This}" Content="{Binding SelectText, ElementName=This}" MinWidth="80" />
            <Button Command="{Binding Cancel, ElementName=This}" Content="{Binding CancelText, ElementName=This}" MinWidth="80" Margin="{DynamicResource LeftMargin}" />
        </StackPanel>

    </Grid>
</UserControl>
